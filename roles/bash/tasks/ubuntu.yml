---
- name: "Bash | Detect oh-my-bash"
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/.oh-my-bash"
  register: ohmybash

- name: "Bash | Register oh-my-bash state"
  ansible.builtin.set_fact:
    ohmybash_is_installed: "{{ ohmybash.stat.exists }}"

- name: "Bash | Debug ohmybash_is_installed"
  ansible.builtin.debug:
    var: ohmybash_is_installed

- name: "Bash | Install oh-my-bash"
  block:
    - name: "Bash | Download oh-my-bash Install Script"
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh
        dest: /tmp/oh-my-bash.install.sh
        force: true
        mode: 0755

    - name: "Bash | Run the install script"
      ansible.builtin.script:
        cmd: /tmp/oh-my-bash.install.sh

  when: not ohmybash_is_installed

- name: "Bash | Copy .bashrc"
  ansible.builtin.copy:
    src: ".bashrc"
    dest: "{{ ansible_user_dir }}/.bashrc"
    mode: 0644

- name: "Bash | Copy custom bash config"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/"
    src: "bash"
    mode: 0644
    directory_mode: 0755
    force: true

- name: "Bash | Copy custom bash theme"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.oh-my-bash/custom/"
    src: "themes"
    directory_mode: 0755
    mode: 0644
    force: true

- name: "Bash | Set default terminal"
  user:
    name: "{{ host_user }}"
    shell: /usr/bin/bash
  become: true

- name: "Bash | Set private variables"
  ansible.builtin.template:
    dest: "{{ ansible_user_dir }}/.config/bash/.bash_private"
    src: ".bash_private.j2"
    mode: 0644
  no_log: true

- name: Bash | Install profile dependencies
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  become: true
  loop:
    - fzf
