---
# Common Claude configuration for all operating systems
- name: "{{ role_name }} | Ensure ~/.claude directory exists"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.claude"
    state: directory
    mode: '0755'

- name: "{{ role_name }} | Check if settings.json already exists"
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.claude/settings.json"
  register: settings_file

- name: "{{ role_name }} | Backup existing settings.json if it exists and is not a symlink"
  ansible.builtin.copy:
    src: "{{ ansible_env.HOME }}/.claude/settings.json"
    dest: "{{ ansible_env.HOME }}/.claude/settings.json.backup"
    remote_src: true
    mode: '0644'
  when: settings_file.stat.exists and not settings_file.stat.islnk

- name: "{{ role_name }} | Remove existing settings.json if it's not a symlink"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.claude/settings.json"
    state: absent
  when: settings_file.stat.exists and not settings_file.stat.islnk

- name: "{{ role_name }} | Deploy settings.json (copy, not symlink)"
  ansible.builtin.copy:
    src: "settings.json"
    dest: "{{ ansible_env.HOME }}/.claude/settings.json"
    mode: '0644'
    backup: true
  when: not settings_file.stat.exists

- name: "{{ role_name }} | Check if ~/.claude/scripts exists and is not a symlink"
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.claude/scripts"
  register: scripts_dir

- name: "{{ role_name }} | Remove existing scripts directory if it's not a symlink"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.claude/scripts"
    state: absent
  when: scripts_dir.stat.exists and not scripts_dir.stat.islnk

- name: "{{ role_name }} | Create symlink to Claude scripts"
  ansible.builtin.file:
    src: "{{ role_path }}/files/scripts"
    dest: "{{ ansible_env.HOME }}/.claude/scripts"
    state: link
    force: true

- name: "{{ role_name }} | Check if ~/.claude/commands exists and is not a symlink"
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.claude/commands"
  register: commands_dir

- name: "{{ role_name }} | Remove existing commands directory if it's not a symlink"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.claude/commands"
    state: absent
  when: commands_dir.stat.exists and not commands_dir.stat.islnk

- name: "{{ role_name }} | Create symlink to Claude commands"
  ansible.builtin.file:
    src: "{{ role_path }}/files/commands"
    dest: "{{ ansible_env.HOME }}/.claude/commands"
    state: link
    force: true

- name: "{{ role_name }} | Check if ~/.claude/hooks exists and is not a symlink"
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.claude/hooks"
  register: hooks_dir

- name: "{{ role_name }} | Remove existing hooks directory if it's not a symlink"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.claude/hooks"
    state: absent
  when: hooks_dir.stat.exists and not hooks_dir.stat.islnk

- name: "{{ role_name }} | Create symlink to Claude hooks"
  ansible.builtin.file:
    src: "{{ role_path }}/files/hooks"
    dest: "{{ ansible_env.HOME }}/.claude/hooks"
    state: link
    force: true

- name: "{{ role_name }} | Check if ~/.claude/agents exists and is not a symlink"
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.claude/agents"
  register: agents_dir

- name: "{{ role_name }} | Remove existing agents directory if it's not a symlink"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.claude/agents"
    state: absent
  when: agents_dir.stat.exists and not agents_dir.stat.islnk

- name: "{{ role_name }} | Create symlink to Claude agents"
  ansible.builtin.file:
    src: "{{ role_path }}/files/agents"
    dest: "{{ ansible_env.HOME }}/.claude/agents"
    state: link
    force: true

# Check for OS-specific configuration
- name: "{{ role_name }} | Checking for Distribution Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: distribution_config

- name: "{{ role_name }} | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: distribution_config.stat.exists