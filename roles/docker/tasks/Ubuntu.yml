---
# Docker installation - REQUIRES SUDO/ADMIN ACCESS
# Based on official Docker documentation: https://docs.docker.com/engine/install/ubuntu/#installation-methods

- name: "Docker | {{ ansible_distribution }} | Check sudo availability"
  ansible.builtin.debug:
    msg: |
      ⚠️  DOCKER INSTALLATION REQUIREMENTS:
      - Sudo access: {{ 'Available ✓' if has_sudo | default(false) else 'NOT AVAILABLE ✗' }}
      - Package installation: {{ 'Possible ✓' if can_install_packages | default(false) else 'NOT POSSIBLE ✗' }}

      {% if not (has_sudo | default(false)) %}
      Docker requires system-level access for:
      - Installing kernel modules
      - Managing system services
      - Creating system groups
      - Modifying system configurations

      ALTERNATIVES WITHOUT SUDO:
      1. Use Podman instead (rootless containers)
      2. Request Docker installation from your system administrator
      3. Use Docker Desktop if available for your platform
      4. Use a cloud-based development environment
      {% endif %}

- name: "Docker | {{ ansible_distribution }} | Skip if no sudo"
  meta: end_play
  when: not (has_sudo | default(false))

# Only proceed if we have sudo access
- name: "Docker | {{ ansible_distribution }} | Installation with sudo"
  when: has_sudo | default(false)
  block:
    - name: "Docker | Update APT cache"
      ansible.builtin.apt:
        update_cache: true
      become: true

    - name: "Docker | Install dependencies"
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present
      become: true

    - name: "Docker | Add Docker's official GPG key"
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg
        state: present
      become: true

    - name: "Docker | Get System Architecture"
      ansible.builtin.command: "dpkg --print-architecture"
      register: dpkg_architecture
      changed_when: false
      failed_when: false
      check_mode: false

    - name: "Docker | Add Docker's stable repository"
      ansible.builtin.apt_repository:
        repo: deb [arch={{ dpkg_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        mode: "0644"
      become: true

    - name: "Docker | Install Docker Engine"
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: true
      become: true
      register: docker_install

    - name: "Docker | Enable service"
      ansible.builtin.systemd:
        enabled: true
        name: docker
        state: started
      become: true
      when: not ansible_host_environment_is_wsl

    - name: "Docker | Add user to docker group"
      ansible.builtin.user:
        append: true
        groups: docker
        name: "{{ ansible_env['USER'] }}"
      become: true
      register: docker_group_add

    - name: "Docker | Ensure docker data directory exists"
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/.local/lib/docker"
        state: directory
        mode: "0710"
      become: true

    - name: "Docker | Copy daemon.json"
      ansible.builtin.template:
        dest: "/etc/docker/daemon.json"
        src: "daemon.json"
        mode: "0644"
      become: true
      notify: restart_docker

    - name: "Docker | Installation complete"
      ansible.builtin.debug:
        msg: |
          Docker installation status:
          - Docker Engine: {{ '✓ Installed' if docker_install is succeeded else '✗ Failed' }}
          - User added to docker group: {{ '✓' if docker_group_add is succeeded else '✗' }}

          NOTE: You may need to log out and back in for group changes to take effect.
          Or run: newgrp docker
