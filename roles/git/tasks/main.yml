---
- name: "{{ role_name }} | Checking for Distribution Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: distribution_config

- name: "{{ role_name }} | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: distribution_config.stat.exists

- name: "Git | Set color.ui"
  community.general.git_config:
    name: color.ui
    scope: global
    value: auto

- name: "Git | Set diff.colorMoved"
  community.general.git_config:
    name: diff.colorMoved
    scope: global
    value: zebra

- name: "Git | Set fetch.prune"
  community.general.git_config:
    name: fetch.prune
    scope: global
    value: true

# git config --global --add url."git@github.com:".insteadOf "https://github.com/"
# - name: "Git | Set URL to SSH"
#   community.general.git_config:
#     name: URL
#     scope: global
#     value: "git@github.com"

- name: "Git | Set init.defaultBranch"
  community.general.git_config:
    name: init.defaultBranch
    scope: global
    value: main

- name: "Git | Set rerere.enabled"
  community.general.git_config:
    name: rerere.enabled
    scope: global
    value: true

- name: "Git | Set pull.ff"
  community.general.git_config:
    name: pull.ff
    scope: global
    value: only

- name: "Git | Set pull.rebase"
  community.general.git_config:
    name: pull.rebase
    scope: global
    value: true

- name: "Git | Set rebase.autoStash"
  community.general.git_config:
    name: rebase.autoStash
    scope: global
    value: true

- name: "Git | Read user.email secret from 1Password"
  when: op_installed
  block:
    - name: "1Password | Get user.email"
      ansible.builtin.command: "op --account my.1password.com read '{{ op.git.user.email }}'"
      register: op_git_user_email
      changed_when: false
      failed_when: false
      # no_log: true

    - name: "1Password | Set git_user_email from vault"
      ansible.builtin.set_fact:
        git_user_email: "{{ op_git_user_email.stdout }}"
      no_log: true
      when: op_git_user_email.rc == 0

    - name: "1Password | Warning when not authenticated"
      ansible.builtin.debug:
        msg: |
          ⚠️  1Password CLI is installed but not authenticated.
          
          To fix this, run:
          eval $(op signin)
          
          Then run dotfiles again. For now, skipping 1Password integration.
      when: op_git_user_email.rc != 0

- name: "Git | Set user.email"
  community.general.git_config:
    name: user.email
    scope: global
    value: "{{ git_user_email }}"
  no_log: true
  when: git_user_email is defined

- name: "Git | Set user.name"
  community.general.git_config:
    name: user.name
    scope: global
    value: "{{ git_user_name }}"

- name: "Git | Set user.signingkey"
  community.general.git_config:
    name: user.signingkey
    scope: global
    value: "{{ ansible_user_dir }}/.ssh/id_ed25519.pub"

- name: "Git | Set gpg.format"
  community.general.git_config:
    name: gpg.format
    scope: global
    value: ssh

- name: "Git | Set commit.gpgsign"
  community.general.git_config:
    name: commit.gpgsign
    scope: global
    value: true

- name: "Git | Set tag.gpgsign"
  community.general.git_config:
    name: tag.gpgsign
    scope: global
    value: true

- name: "Git | Ensure ~/.config/git/allowed_signers exists"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/git"
    state: directory
    mode: "0755"

- name: "1Password | Get allowed_signers"
  ansible.builtin.command: "op read '{{ op.git.allowed_signers }}'"
  register: op_git_ssh_allowed_signers
  changed_when: false
  failed_when: false
  no_log: true
  when: op_installed

- name: "1Password | Configure ~/.config/git/allowed_signers"
  ansible.builtin.blockinfile:
    path: "{{ ansible_user_dir }}/.config/git/allowed_signers"
    block: "{{ op_git_ssh_allowed_signers.stdout }}"
    mode: "0600"
    create: true
  no_log: true
  when: 
    - op_installed
    - op_git_ssh_allowed_signers.rc == 0

- name: "Git | Set gpg.ssh.allowedSignersFile"
  community.general.git_config:
    name: gpg.ssh.allowedSignersFile
    scope: global
    value: "{{ ansible_user_dir }}/.config/git/allowed_signers"

- name: "Git | Set undo alias"
  community.general.git_config:
    name: alias.undo
    scope: global
    value: "reset HEAD~1 --mixed"

- name: "Git | Set br alias"
  community.general.git_config:
    name: alias.br
    scope: global
    value: "branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate"


- name: "Git | Copy global.commit.template"
  ansible.builtin.copy:
    src: global.commit.template
    dest: "{{ ansible_user_dir }}/.config/git/commit_template"
    mode: "0644"

- name: "Git | Set commit.template"
  community.general.git_config:
    name: commit.template
    scope: global
    value: "{{ ansible_user_dir }}/.config/git/commit_template"
