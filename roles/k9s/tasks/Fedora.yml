---
# K9s installation for Fedora/RHEL using github_release role

- name: "K9s | {{ ansible_distribution }} | Check if k9s is installed"
  ansible.builtin.command: which k9s
  register: k9s_check
  changed_when: false
  failed_when: false

- name: "K9s | {{ ansible_distribution }} | Install from GitHub Release"
  ansible.builtin.include_role:
    name: github_release
  vars:
    github_release_repo: "derailed/k9s"
    github_release_binary_name: "k9s"
    github_release_asset_name_pattern: "k9s_Linux_{{ ansible_architecture | replace('x86_64', 'amd64') | replace('aarch64', 'arm64') }}.tar.gz"
    github_release_check_command: "k9s version -s"
    github_release_version_pattern: 'v[0-9]+\.[0-9]+\.[0-9]+'
    github_release_install_dir: "{{ '~/.local/bin' if not (can_install_packages | default(false)) else '/usr/local/bin' }}"
    github_release_binary_mode: "0755"
    github_release_requires_sudo: "{{ can_install_packages | default(false) }}"

- name: "K9s | {{ ansible_distribution }} | Ensure k9s config directory exists"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/k9s"
    state: directory
    mode: "0755"

- name: "K9s | {{ ansible_distribution }} | Ensure k9s skins directory exists"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/k9s/skins"
    state: directory
    mode: "0755"

- name: "K9s | {{ ansible_distribution }} | Copy skin config"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/k9s/skins/catppuccin_mocha.yaml"
    src: "catppuccin_mocha.yaml"
    mode: "0644"

- name: "K9s | {{ ansible_distribution }} | Copy config"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/k9s/config.yaml"
    src: "config.yaml"
    mode: "0644"

- name: "K9s | {{ ansible_distribution }} | Report installation status"
  ansible.builtin.debug:
    msg: |
      K9s installation status:
      - Status: {{ '✓ Installed' if k9s_check.rc == 0 else '✓ Newly installed' }}
      - Location: {{ ansible_user_dir }}/.local/bin/k9s
      - Config: ~/.config/k9s/
      - Sudo used: {{ '✓' if can_install_packages | default(false) else '✗ (installed to user directory)' }}